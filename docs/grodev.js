const aYear = document.getElementById("aYear");
const aMonth = document.getElementById("aMonth");
const bDate = document.getElementById("bDate");
const wt = document.getElementById("weight");
const ht = document.getElementById("height");
const b = document.getElementById("bmi");

const calcBut = document.getElementById("calcBut");
const tText = document.getElementById("tText");
const rowDiv = document.getElementById("rowDiv");

let newWidth = rowDiv.clientWidth;
let r;
if (newWidth < 500){
	r = newWidth/500;
} else {
	r = 1;
}

const svgF = document.getElementById("svgF");
const svgNS = "http://www.w3.org/2000/svg";
const img = document.getElementById("img");
const genderLk = document.getElementById("Lk");
const genderPr = document.getElementById("Pr");


const imgLink = [
"https://imjustwtknowit.github.io/assets/cht-wfa-boys-z-0-2_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cht-wfa-boys-z-2-5_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cht-wfa-girls-z-0-2_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cht-wfa-girls-z-2-5_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cht-lfa-boys-z-0-2_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cht-hfa-boys-z-2-5_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cht-lfa-girls-z-0-2_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cht-hfa-girls-z-2-5_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cht-wfl-boys-z-0-2_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cht-wfh-boys-z-2-5_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cht-wfl-girls-z-0-2_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cht-wfh-girls-z-2-5_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cht-bfa-boys-z-0-2_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cht-bfa-girls-z-0-2_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cdc-wfh-boys_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cdc-wfh-girls_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cdc-bfa-boys_page-0001.jpg",
"https://imjustwtknowit.github.io/assets/cdc-bfa-girls_page-0001.jpg"
]

const wfaVal = {
 res: ["Berat badan sangat kurang", "Berat badan kurang", "Berat badan normal", "Risiko berat badan lebih. Evaluasi dengan BB/TB atau IMT/U"],
  m3: [[2.1, 2.9, 3.8, 4.4, 4.9, 5.3, 5.7, 5.9, 6.2, 6.4, 6.6, 6.8, 6.9, 7.1, 7.2, 7.4, 7.5, 7.7, 7.8, 8.0, 8.1, 8.2, 8.4, 8.5, 8.6, 8.8, 8.9, 9.0, 9.1, 9.2, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9, 10.0, 10.1, 10.2, 10.3, 10.4, 10.5, 10.6, 10.7, 10.8, 10.9, 11.0, 11.1, 11.2, 11.3, 11.4, 11.5, 11.6, 11.7, 11.8, 11.9, 12.0, 12.1, 12.2, 12.3, 12.4], [2.0, 2.7, 3.4, 4.0, 4.4, 4.8, 5.1, 5.3, 5.6, 5.8, 5.9, 6.1, 6.3, 6.4, 6.6, 6.7, 6.9, 7.0, 7.2, 7.3, 7.5, 7.6, 7.8, 7.9, 8.1, 8.2, 8.4, 8.5, 8.6, 8.8, 8.9, 9.0, 9.1, 9.3, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9, 10.1, 10.2, 10.3, 10.4, 10.5, 10.6, 10.7, 10.8, 10.9, 11.0, 11.1, 11.2, 11.3, 11.4, 11.5, 11.6, 11.7, 11.8, 11.9, 12.0, 12.1]],
  m2: [[2.5, 3.4, 4.3, 5.0, 5.6, 6.0, 6.4, 6.7, 6.9, 7.1, 7.4, 7.6, 7.7, 7.9, 8.1, 8.3, 8.4, 8.6, 8.8, 8.9, 9.1, 9.2, 9.4, 9.5, 9.7, 9.8, 10.0, 10.1, 10.2, 10.4, 10.5, 10.7, 10.8, 10.9, 11.0, 11.2, 11.3, 11.4, 11.5, 11.6, 11.8, 11.9, 12.0, 12.1, 12.2, 12.4, 12.5, 12.6, 12.7, 12.8, 12.9, 13.1, 13.2, 13.3, 13.4, 13.5, 13.6, 13.7, 13.8, 14.0, 14.1], [2.4, 3.2, 3.9, 4.5, 5.0, 5.4, 5.7, 6.0, 6.3, 6.5, 6.7, 6.9, 7.0, 7.2, 7.4, 7.6, 7.7, 7.9, 8.1, 8.2, 8.4, 8.6, 8.7, 8.9, 9.0, 9.2, 9.4, 9.5, 9.7, 9.8, 10.0, 10.1, 10.3, 10.4, 10.5, 10.7, 10.8, 10.9, 11.1, 11.2, 11.3, 11.5, 11.6, 11.7, 11.8, 12.0, 12.1, 12.2, 12.3, 12.4, 12.6, 12.7, 12.8, 12.9, 13.0, 13.2, 13.3, 13.4, 13.5, 13.6, 13.7]],
  p1: [[3.9, 5.1, 6.3, 7.2, 7.8, 8.4, 8.8, 9.2, 9.6, 9.9, 10.2, 10.5, 10.8, 11, 11.3, 11.5, 11.7, 12, 12.2, 12.5, 12.7, 12.9, 13.2, 13.4, 13.6, 13.9, 14.1, 14.3, 14.5, 14.8, 15, 15.2, 15.4, 15.6, 15.8, 16, 16.2, 16.4, 16.6, 16.8, 17, 17.2, 17.4, 17.6, 17.8, 18, 18.2, 18.4, 18.6, 18.8, 19, 19.2, 19.4, 19.6, 19.8, 20, 20.2, 20.4, 20.6, 20.8, 21
], [3.7, 4.8, 5.8, 6.6, 7.3, 7.8, 8.2, 8.6, 9, 9.3, 9.6, 9.9, 10.1, 10.4, 10.6, 10.9, 11.1, 11.4, 11.6, 11.8, 12.1, 12.3, 12.5, 12.8, 13, 13.3, 13.5, 13.7, 14, 14.2, 14.4, 14.7, 14.9, 15.1, 15.4, 15.6, 15.8, 16, 16.3, 16.5, 16.7, 16.9, 17.2, 17.4, 17.6, 17.8, 18.1, 18.3, 18.5, 18.8, 19, 19.2, 19.4, 19.7, 19.9, 20.1, 20.3, 20.6, 20.8, 21, 21.2
]]
};

const hfaVal = {
	res: ["Sangat pendek", "Pendek", "Normal", "Tinggi. Mungkin mengalami gangguan endokrin"],
  m3: [[44.2, 48.9, 52.4, 55.3, 57.6, 59.6, 61.2, 62.7, 64, 65.2, 66.4, 67.6, 68.6, 69.6, 70.6, 71.6, 72.5, 73.3, 74.2, 75, 75.8, 76.5, 77.2, 78, 78.7, 78, 78.6, 79.3, 79.9, 80.5, 81.1, 81.7, 82.3, 82.8, 83.4, 83.9, 84.4, 85, 85.5, 86, 86.5, 87, 87.5, 88, 88.4, 88.9, 89.4, 89.8, 90.3, 90.7, 91.2, 91.6, 92.1, 92.5, 93, 93.4, 93.9, 94.3, 94.7, 95.2, 95.6, 96.1], [43.6, 47.8, 51, 53.5, 55.6, 57.4, 58.9, 60.3, 61.7, 62.9, 64.1, 65.2, 66.3, 67.3, 68.3, 69.3, 70.2, 71.1, 72, 72.8, 73.7, 74.5, 75.2, 76, 76.7, 76, 76.8, 77.5, 78.1, 78.8, 79.5, 80.1, 80.7, 81.3, 81.9, 82.5, 83.1, 83.6, 84.2, 84.7, 85.3, 85.8, 86.3, 86.8, 87.4, 87.9, 88.4, 88.9, 89.3, 89.8, 90.3, 90.7, 91.2, 91.7, 92.1, 92.6, 93, 93.4, 93.9, 94.3, 94.7, 95.2
]],
  m2: [[46.1, 50.8, 54.4, 57.3, 59.7, 61.7, 63.3, 64.8, 66.2, 67.5, 68.7, 69.9, 71, 72.1, 73.1, 74.1, 75, 76, 76.9, 77.7, 78.6, 79.4, 80.2, 81, 81.7, 81, 81.7, 82.5, 83.1, 83.8, 84.5, 85.1, 85.7, 86.4, 86.9, 87.5, 88.1, 88.7, 89.2, 89.8, 90.3, 90.9, 91.4, 91.9, 92.4, 93, 93.5, 94, 94.4, 94.9, 95.4, 95.9, 96.4, 96.9, 97.4, 97.8, 98.3, 98.8, 99.3, 99.7, 100.2, 100.7], [45.4, 49.8, 53, 55.6, 57.8, 59.6, 61.2, 62.7, 64, 65.3, 66.5, 67.7, 68.9, 70, 71, 72, 73, 74, 74.9, 75.8, 76.7, 77.5, 78.4, 79.2, 80, 79.3, 80, 80.8, 81.5, 82.2, 82.9, 83.6, 84.3, 84.9, 85.6, 86.2, 86.8, 87.4, 88, 88.6, 89.2, 89.8, 90.4, 90.9, 91.5, 92, 92.5, 93.1, 93.6, 94.1, 94.6, 95.1, 95.6, 96.1, 96.6, 97.1, 97.6, 98.1, 98.5, 99, 99.5, 99.9
]],
  p3: [[55.6, 60.6, 64.4, 67.6, 70.1, 72.2, 74, 75.7, 77.2, 78.7, 80.1, 81.5, 82.9, 84.2, 85.5, 86.7, 88, 89.2, 90.4, 91.5, 92.6, 93.8, 94.9, 95.9, 97, 96.3, 97.3, 98.3, 99.3, 100.3, 101.2, 102.1, 103, 103.9, 104.8, 105.6, 106.4, 107.2, 108, 108.8, 109.5, 110.3, 111, 111.7, 112.5, 113.2, 113.9, 114.6, 115.2, 115.9, 116.6, 117.3, 117.9, 118.6, 119.2, 119.9, 120.6, 121.2, 121.9, 122.6, 123.2, 123.9], [54.7, 59.5, 63.2, 66.1, 68.6, 70.7, 72.5, 74.2, 75.8, 77.4, 78.9, 80.3, 81.7, 83.1, 84.4, 85.7, 87, 88.2, 89.4, 90.6, 91.7, 92.9, 94, 95, 96.1, 95.4, 96.4, 97.4, 98.4, 99.4, 100.3, 101.3, 102.2, 103.1, 103.9, 104.8, 105.6, 106.5, 107.3, 108.1, 108.9, 109.7, 110.5, 111.2, 112, 112.7, 113.5, 114.2, 114.9, 115.7, 116.4, 117.1, 117.7, 118.4, 119.1, 119.8, 120.4, 121.1, 121.8, 122.4, 123.1, 123.7
]]
};

const wfh0Val = {
	res: ["Gizi buruk", "Gizi kurang", "Gizi baik", "Risiko gizi lebih", "Gizi lebih", "Obesitas"],
  h: [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110
],
	m3: [[1.9, 2, 2.1, 2.3, 2.4, 2.6, 2.7, 2.9, 3.1, 3.3, 3.6, 3.8, 4, 4.3, 4.5, 4.7, 4.9, 5.1, 5.3, 5.5, 5.7, 5.9, 6.1, 6.3, 6.5, 6.6, 6.8, 7, 7.2, 7.3, 7.5, 7.6, 7.8, 7.9, 8.1, 8.2, 8.4, 8.5, 8.7, 8.9, 9.1, 9.3, 9.5, 9.7, 9.9, 10.1, 10.3, 10.5, 10.7, 10.8, 11, 11.2, 11.4, 11.6, 11.8, 12, 12.2, 12.4, 12.6, 12.8, 13, 13.3, 13.5, 13.7, 14, 14.2
], [1.9, 2, 2.2, 2.3, 2.4, 2.6, 2.8, 2.9, 3.1, 3.3, 3.5, 3.7, 3.9, 4.1, 4.3, 4.5, 4.7, 4.9, 5.1, 5.3, 5.5, 5.6, 5.8, 6, 6.1, 6.3, 6.5, 6.6, 6.8, 6.9, 7.1, 7.2, 7.4, 7.5, 7.7, 7.8, 8, 8.1, 8.3, 8.5, 8.7, 8.9, 9.1, 9.3, 9.5, 9.7, 9.9, 10.1, 10.2, 10.4, 10.6, 10.8, 11, 11.2, 11.4, 11.6, 11.8, 12, 12.3, 12.5, 12.7, 13, 13.2, 13.5, 13.7, 14
]],
  m2: [[2, 2.2, 2.3, 2.5, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4.1, 4.3, 4.6, 4.8, 5.1, 5.3, 5.6, 5.8, 6, 6.2, 6.4, 6.6, 6.8, 7, 7.2, 7.4, 7.6, 7.7, 7.9, 8.1, 8.3, 8.4, 8.6, 8.7, 8.9, 9.1, 9.2, 9.4, 9.6, 9.8, 10, 10.2, 10.5, 10.7, 10.9, 11.1, 11.3, 11.5, 11.7, 11.9, 12.1, 12.3, 12.5, 12.7, 12.9, 13.2, 13.4, 13.6, 13.9, 14.1, 14.4, 14.6, 14.9, 15.1, 15.4
], [2.1, 2.2, 2.4, 2.5, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.3, 4.5, 4.7, 4.9, 5.1, 5.3, 5.5, 5.7, 5.9, 6.1, 6.3, 6.5, 6.7, 6.9, 7, 7.2, 7.4, 7.5, 7.7, 7.8, 8, 8.2, 8.3, 8.5, 8.7, 8.8, 9, 9.2, 9.4, 9.7, 9.9, 10.1, 10.3, 10.5, 10.7, 10.9, 11.1, 11.3, 11.5, 11.7, 12, 12.2, 12.4, 12.6, 12.8, 13.1, 13.3, 13.6, 13.8, 14.1, 14.4, 14.7, 15, 15.3
]],
  p1: [[2.7, 2.9, 3, 3.2, 3.4, 3.6, 3.9, 4.1, 4.4, 4.7, 5, 5.3, 5.6, 5.9, 6.2, 6.5, 6.8, 7.1, 7.4, 7.6, 7.9, 8.2, 8.4, 8.7, 8.9, 9.2, 9.4, 9.6, 9.9, 10.1, 10.3, 10.6, 10.8, 11, 11.2, 11.4, 11.6, 11.8, 12, 12.2, 12.5, 12.8, 13, 13.3, 13.5, 13.8, 14.1, 14.3, 14.6, 14.8, 15.1, 15.3, 15.6, 15.9, 16.2, 16.5, 16.8, 17.1, 17.4, 17.8, 18.1, 18.5, 18.8, 19.2, 19.6, 20
], [2.7, 2.9, 3.1, 3.3, 3.5, 3.7, 3.9, 4.2, 4.4, 4.7, 5, 5.3, 5.6, 5.9, 6.2, 6.4, 6.7, 7, 7.3, 7.5, 7.8, 8, 8.3, 8.5, 8.7, 9, 9.2, 9.4, 9.6, 9.8, 10, 10.2, 10.4, 10.6, 10.8, 11, 11.3, 11.5, 11.8, 12, 12.3, 12.6, 12.8, 13.1, 13.4, 13.7, 13.9, 14.2, 14.5, 14.7, 15, 15.3, 15.6, 15.9, 16.2, 16.5, 16.8, 17.1, 17.5, 17.8, 18.2, 18.5, 18.9, 19.3, 19.7, 20.2
]],
  p2: [[3, 3.1, 3.3, 3.6, 3.8, 4, 4.2, 4.5, 4.8, 5.1, 5.4, 5.8, 6.1, 6.4, 6.8, 7.1, 7.4, 7.7, 8, 8.3, 8.6, 8.9, 9.2, 9.4, 9.7, 10, 10.2, 10.5, 10.8, 11, 11.3, 11.5, 11.7, 12, 12.2, 12.4, 12.6, 12.8, 13.1, 13.3, 13.6, 13.9, 14.2, 14.5, 14.7, 15, 15.3, 15.6, 15.8, 16.1, 16.4, 16.7, 17, 17.3, 17.6, 18, 18.3, 18.7, 19, 19.4, 19.8, 20.2, 20.6, 21, 21.4, 21.9
], [3, 3.2, 3.4, 3.6, 3.8, 4, 4.3, 4.6, 4.9, 5.2, 5.5, 5.8, 6.1, 6.5, 6.8, 7.1, 7.4, 7.7, 8, 8.3, 8.6, 8.8, 9.1, 9.4, 9.6, 9.9, 10.1, 10.3, 10.6, 10.8, 11, 11.2, 11.5, 11.7, 11.9, 12.1, 12.4, 12.6, 12.9, 13.2, 13.5, 13.8, 14.1, 14.4, 14.7, 15, 15.3, 15.6, 15.9, 16.2, 16.5, 16.8, 17.1, 17.5, 17.8, 18.1, 18.5, 18.9, 19.2, 19.6, 20, 20.5, 20.9, 21.3, 21.8, 22.3
]],
  p3: [[3.3, 3.5, 3.7, 3.9, 4.2, 4.4, 4.7, 5, 5.3, 5.6, 6, 6.3, 6.7, 7.1, 7.4, 7.8, 8.1, 8.5, 8.8, 9.1, 9.4, 9.7, 10, 10.3, 10.6, 10.9, 11.2, 11.5, 11.8, 12.1, 12.3, 12.6, 12.8, 13.1, 13.3, 13.6, 13.8, 14, 14.3, 14.6, 14.9, 15.2, 15.5, 15.8, 16.1, 16.4, 16.7, 17, 17.3, 17.6, 17.9, 18.2, 18.5, 18.9, 19.2, 19.6, 20, 20.4, 20.8, 21.2, 21.7, 22.1, 22.6, 23.1, 23.6, 24.1
], [3.3, 3.5, 3.7, 4, 4.2, 4.5, 4.8, 5.1, 5.4, 5.7, 6.1, 6.4, 6.8, 7.1, 7.5, 7.8, 8.2, 8.5, 8.8, 9.1, 9.5, 9.8, 10, 10.3, 10.6, 10.9, 11.1, 11.4, 11.7, 11.9, 12.2, 12.4, 12.6, 12.9, 13.1, 13.4, 13.7, 13.9, 14.2, 14.5, 14.9, 15.2, 15.5, 15.9, 16.2, 16.5, 16.9, 17.2, 17.5, 17.9, 18.2, 18.6, 18.9, 19.3, 19.6, 20, 20.4, 20.8, 21.3, 21.7, 22.2, 22.6, 23.1, 23.6, 24.2, 24.7
]]
};

const wfh2Val = {
	res: ["Gizi buruk", "Gizi kurang", "Gizi baik", "Risiko gizi lebih", "Gizi lebih", "Obesitas"],
  h: [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
],
  m3: [[5.9, 6.1, 6.2, 6.4, 6.6, 6.8, 6.9, 7.1, 7.3, 7.4, 7.6, 7.7, 7.9, 8, 8.2, 8.3, 8.5, 8.7, 8.8, 9, 9.2, 9.4, 9.6, 9.8, 10, 10.2, 10.4, 10.6, 10.8, 11, 11.1, 11.3, 11.5, 11.7, 11.9, 12.1, 12.3, 12.5, 12.8, 13, 13.2, 13.4, 13.7, 13.9, 14.1, 14.4, 14.6, 14.9, 15.2, 15.4, 15.7, 16, 16.2, 16.5, 16.8, 17.1
], [5.6, 5.8, 5.9, 6.1, 6.3, 6.4, 6.6, 6.7, 6.9, 7, 7.2, 7.3, 7.5, 7.6, 7.8, 7.9, 8.1, 8.3, 8.5, 8.6, 8.8, 9, 9.2, 9.4, 9.6, 9.8, 10, 10.2, 10.4, 10.6, 10.8, 10.9, 11.1, 11.3, 11.5, 11.7, 12, 12.2, 12.4, 12.6, 12.9, 13.1, 13.4, 13.7, 13.9, 14.2, 14.5, 14.8, 15.1, 15.4, 15.7, 16, 16.3, 16.6, 16.9, 17.3
]],
  m2: [[6.3, 6.5, 6.7, 6.9, 7.1, 7.3, 7.5, 7.7, 7.9, 8, 8.2, 8.4, 8.5, 8.7, 8.8, 9, 9.2, 9.3, 9.5, 9.7, 10, 10.2, 10.4, 10.6, 10.8, 11, 11.2, 11.4, 11.6, 11.8, 12, 12.2, 12.4, 12.6, 12.9, 13.1, 13.3, 13.6, 13.8, 14, 14.3, 14.5, 14.8, 15.1, 15.3, 15.6, 15.9, 16.2, 16.5, 16.8, 17.1, 17.4, 17.7, 18, 18.3, 18.6
], [6.1, 6.3, 6.4, 6.6, 6.8, 7, 7.1, 7.3, 7.5, 7.6, 7.8, 8, 8.1, 8.3, 8.4, 8.6, 8.8, 9, 9.2, 9.4, 9.6, 9.8, 10, 10.2, 10.4, 10.6, 10.9, 11.1, 11.3, 11.5, 11.7, 11.9, 12.1, 12.3, 12.5, 12.8, 13, 13.3, 13.5, 13.8, 14, 14.3, 14.6, 14.9, 15.2, 15.5, 15.8, 16.2, 16.5, 16.8, 17.2, 17.5, 17.8, 18.2, 18.5, 18.9
]],
  p1: [[8.1, 8.3, 8.6, 8.8, 9.1, 9.3, 9.6, 9.8, 10, 10.3, 10.5, 10.7, 10.9, 11.1, 11.3, 11.5, 11.7, 11.9, 12.2, 12.4, 12.7, 12.9, 13.2, 13.5, 13.7, 14, 14.2, 14.5, 14.7, 15, 15.3, 15.5, 15.8, 16.1, 16.4, 16.7, 17, 17.3, 17.7, 18, 18.4, 18.7, 19.1, 19.5, 19.8, 20.2, 20.7, 21.1, 21.5, 21.9, 22.4, 22.8, 23.3, 23.7, 24.1, 24.6
], [7.9, 8.2, 8.4, 8.7, 8.9, 9.1, 9.3, 9.5, 9.8, 10, 10.2, 10.4, 10.6, 10.8, 11, 11.2, 11.4, 11.7, 11.9, 12.2, 12.5, 12.7, 13, 13.3, 13.6, 13.8, 14.1, 14.4, 14.7, 14.9, 15.2, 15.5, 15.8, 16.1, 16.4, 16.7, 17, 17.4, 17.7, 18.1, 18.4, 18.8, 19.2, 19.6, 20, 20.5, 20.9, 21.4, 21.8, 22.3, 22.8, 23.3, 23.8, 24.2, 24.7, 25.2
]],
  p2: [[8.8, 9.1, 9.4, 9.6, 9.9, 10.2, 10.4, 10.7, 11, 11.2, 11.4, 11.7, 11.9, 12.1, 12.3, 12.6, 12.8, 13, 13.3, 13.5, 13.8, 14.1, 14.4, 14.7, 14.9, 15.2, 15.5, 15.8, 16, 16.3, 16.6, 16.9, 17.2, 17.5, 17.9, 18.2, 18.5, 18.9, 19.3, 19.7, 20.1, 20.5, 20.9, 21.3, 21.8, 22.2, 22.7, 23.1, 23.6, 24.1, 24.6, 25.1, 25.6, 26.1, 26.6, 27.2
], [8.7, 9, 9.3, 9.5, 9.8, 10, 10.3, 10.5, 10.7, 11, 11.2, 11.4, 11.6, 11.8, 12.1, 12.3, 12.6, 12.8, 13.1, 13.4, 13.7, 14, 14.3, 14.6, 14.9, 15.2, 15.5, 15.8, 16.1, 16.4, 16.7, 17, 17.4, 17.7, 18, 18.4, 18.7, 19.1, 19.5, 19.9, 20.3, 20.8, 21.2, 21.7, 22.1, 22.6, 23.1, 23.6, 24.2, 24.7, 25.2, 25.8, 26.3, 26.9, 27.4, 28
]],
  p3: [[9.6, 9.9, 10.2, 10.5, 10.8, 11.1, 11.4, 11.7, 12, 12.2, 12.5, 12.8, 13, 13.3, 13.5, 13.7, 14, 14.2, 14.5, 14.8, 15.1, 15.4, 15.7, 16, 16.3, 16.6, 16.9, 17.2, 17.5, 17.8, 18.1, 18.4, 18.8, 19.1, 19.5, 19.9, 20.3, 20.7, 21.1, 21.6, 22, 22.5, 22.9, 23.4, 23.9, 24.4, 25, 25.5, 26, 26.6, 27.2, 27.8, 28.3, 28.9, 29.5, 30.1
], [9.7, 10, 10.2, 10.5, 10.8, 11.1, 11.3, 11.6, 11.8, 12.1, 12.3, 12.6, 12.8, 13.1, 13.3, 13.6, 13.9, 14.1, 14.5, 14.8, 15.1, 15.4, 15.8, 16.1, 16.4, 16.8, 17.1, 17.4, 17.8, 18.1, 18.5, 18.8, 19.2, 19.5, 19.9, 20.3, 20.7, 21.1, 21.6, 22, 22.5, 23, 23.5, 24, 24.5, 25.1, 25.7, 26.2, 26.8, 27.4, 28.1, 28.7, 29.3, 29.9, 30.6, 31.2
]]
}

const bfaVal = {
	res: ["Gizi buruk", "Gizi kurang", "Gizi baik", "Risiko gizi lebih", "Gizi lebih", "Obesitas"],
  m3: [[10.2, 11.3, 12.5, 13.1, 13.4, 13.5, 13.6, 13.7, 13.6, 13.6, 13.5, 13.4, 13.4, 13.3, 13.2, 13.1, 13.1, 13, 12.9, 12.9, 12.8, 12.8, 12.7, 12.7, 12.7
], [10.1, 10.8, 11.8, 12.4, 12.7, 12.9, 13, 13, 13, 12.9, 12.9, 12.8, 12.7, 12.6, 12.6, 12.5, 12.4, 12.4, 12.3, 12.3, 12.2, 12.2, 12.2, 12.2, 12.1
]],
  m2: [[11.1, 12.4, 13.7, 14.3, 14.5, 14.7, 14.7, 14.8, 14.7, 14.7, 14.6, 14.5, 14.4, 14.3, 14.2, 14.1, 14, 13.9, 13.9, 13.8, 13.7, 13.7, 13.6, 13.6, 13.6
], [11.1, 12, 13, 13.6, 13.9, 14.1, 14.1, 14.2, 14.1, 14.1, 14, 13.9, 13.8, 13.7, 13.6, 13.5, 13.5, 13.4, 13.3, 13.3, 13.2, 13.2, 13.1, 13.1, 13.1
]],
  p1: [[14.8, 16.3, 17.8, 18.4, 18.7, 18.8, 18.8, 18.8, 18.7, 18.6, 18.5, 18.4, 18.2, 18.1, 18, 17.8, 17.7, 17.6, 17.5, 17.4, 17.3, 17.2, 17.2, 17.1, 17
], [14.6, 16, 17.3, 17.9, 18.3, 18.4, 18.5, 18.5, 18.4, 18.3, 18.2, 18, 17.9, 17.7, 17.6, 17.5, 17.4, 17.3, 17.2, 17.1, 17, 17, 16.9, 16.9, 16.8
]],
  p2: [[16.3, 17.8, 19.4, 20, 20.3, 20.5, 20.5, 20.5, 20.4, 20.3, 20.1, 20, 19.8, 19.7, 19.5, 19.4, 19.3, 19.1, 19, 18.9, 18.8, 18.7, 18.7, 18.6, 18.5
], [16.1, 17.5, 19, 19.7, 20, 20.2, 20.3, 20.3, 20.2, 20.1, 19.9, 19.8, 19.6, 19.5, 19.3, 19.2, 19.1, 18.9, 18.8, 18.8, 18.7, 18.6, 18.5, 18.5, 18.4
]],
  p3: [[18.1, 19.4, 21.1, 21.8, 22.1, 22.3, 22.3, 22.3, 22.2, 22.1, 22, 21.8, 21.6, 21.5, 21.3, 21.2, 21, 20.9, 20.8, 20.7, 20.6, 20.5, 20.4, 20.3, 20.3
], [17.7, 19.1, 20.7, 21.5, 22, 22.2, 22.3, 22.3, 22.2, 22.1, 21.9, 21.8, 21.6, 21.4, 21.3, 21.1, 21, 20.9, 20.8, 20.7, 20.6, 20.5, 20.4, 20.4, 20.3
]]
}

const wfaValC = {
	res: ["Berat badan sangat kurang", "Berat badan kurang", "Berat badan normal", "Berat badan lebih"],
  per: [60, 80, 120],
  age: [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240
],
  p50: [[12.67, 12.81, 12.95, 13.09, 13.22, 13.36, 13.5, 13.63, 13.77, 13.91, 14.05, 14.19, 14.33, 14.48, 14.63, 14.78, 14.93, 15.08, 15.24, 15.4, 15.56, 15.73, 15.9, 16.07, 16.24, 16.41, 16.58, 16.75, 16.93, 17.11, 17.29, 17.47, 17.65, 17.84, 18.02, 18.21, 18.4, 18.58, 18.77, 18.96, 19.15, 19.34, 19.53, 19.72, 19.91, 20.1, 20.3, 20.49, 20.68, 20.88, 21.07, 21.27, 21.46, 21.66, 21.86, 22.06, 22.26, 22.46, 22.66, 22.86, 23.07, 23.27, 23.48, 23.69, 23.9, 24.11, 24.32, 24.54, 24.75, 24.97, 25.19, 25.42, 25.64, 25.87, 26.1, 26.33, 26.57, 26.8, 27.04, 27.29, 27.54, 27.79, 28.04, 28.29, 28.55, 28.82, 29.08, 29.35, 29.62, 29.9, 30.18, 30.46, 30.75, 31.04, 31.34, 31.63, 31.94, 32.25, 32.56, 32.87, 33.19, 33.51, 33.84, 34.17, 34.51, 34.85, 35.2, 35.55, 35.9, 36.25, 36.62, 36.99, 37.36, 37.73, 38.11, 38.49, 38.88, 39.27, 39.67, 40.07, 40.47, 40.88, 41.29, 41.71, 42.13, 42.55, 42.98, 43.41, 43.84, 44.27, 44.71, 45.15, 45.59, 46.04, 46.49, 46.94, 47.39, 47.84, 48.29, 48.74, 49.19, 49.65, 50.1, 50.56, 51.01, 51.46, 51.91, 52.36, 52.81, 53.25, 53.69, 54.13, 54.57, 55.01, 55.44, 55.86, 56.28, 56.7, 57.12, 57.52, 57.92, 58.32, 58.71, 59.09, 59.47, 59.85, 60.21, 60.57, 60.93, 61.27, 61.61, 61.94, 62.26, 62.58, 62.88, 63.18, 63.48, 63.76, 64.04, 64.31, 64.57, 64.83, 65.08, 65.32, 65.55, 65.78, 66, 66.22, 66.42, 66.62, 66.82, 67.02, 67.2, 67.38, 67.56, 67.73, 67.9, 68.06, 68.22, 68.38, 68.54, 68.69, 68.84, 68.98, 69.12, 69.27, 69.41, 69.54, 69.68, 69.81, 69.94, 70.06, 70.18, 70.3, 70.41, 70.51, 70.6
], [12.06, 12.21, 12.37, 12.52, 12.68, 12.83, 12.97, 13.12, 13.27, 13.42, 13.57, 13.72, 13.87, 14.02, 14.17, 14.33, 14.48, 14.64, 14.8, 14.96, 15.13, 15.29, 15.46, 15.63, 15.8, 15.97, 16.14, 16.31, 16.49, 16.66, 16.84, 17.02, 17.2, 17.38, 17.56, 17.75, 17.93, 18.12, 18.31, 18.5, 18.69, 18.88, 19.07, 19.26, 19.45, 19.65, 19.84, 20.04, 20.24, 20.44, 20.64, 20.84, 21.05, 21.26, 21.47, 21.68, 21.89, 22.1, 22.32, 22.54, 22.76, 22.98, 23.21, 23.44, 23.67, 23.9, 24.14, 24.38, 24.62, 24.87, 25.12, 25.37, 25.63, 25.89, 26.15, 26.42, 26.69, 26.97, 27.24, 27.53, 27.81, 28.1, 28.4, 28.69, 28.99, 29.3, 29.61, 29.92, 30.23, 30.55, 30.88, 31.21, 31.54, 31.87, 32.21, 32.55, 32.89, 33.24, 33.59, 33.94, 34.3, 34.65, 35.01, 35.37, 35.74, 36.1, 36.47, 36.84, 37.21, 37.58, 37.95, 38.32, 38.69, 39.07, 39.44, 39.81, 40.18, 40.55, 40.92, 41.28, 41.65, 42.01, 42.37, 42.73, 43.09, 43.44, 43.8, 44.14, 44.48, 44.82, 45.16, 45.5, 45.82, 46.15, 46.47, 46.78, 47.09, 47.39, 47.69, 47.99, 48.27, 48.55, 48.83, 49.1, 49.36, 49.62, 49.87, 50.12, 50.36, 50.59, 50.82, 51.04, 51.25, 51.46, 51.66, 51.86, 52.05, 52.23, 52.41, 52.58, 52.74, 52.9, 53.06, 53.21, 53.35, 53.49, 53.63, 53.76, 53.89, 54.01, 54.13, 54.24, 54.35, 54.46, 54.56, 54.66, 54.76, 54.86, 54.96, 55.05, 55.14, 55.23, 55.32, 55.41, 55.49, 55.58, 55.67, 55.75, 55.84, 55.93, 56.01, 56.1, 56.19, 56.28, 56.37, 56.46, 56.55, 56.64, 56.74, 56.83, 56.92, 57.02, 57.12, 57.21, 57.31, 57.4, 57.5, 57.59, 57.68, 57.76, 57.84, 57.92, 58, 58.06, 58.12, 58.18, 58.22
]]
}

const hfaValC = {
	res: ["Pendek", "Normal", "Tinggi"],
  age: [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240
],
	p50: [[86.45, 87.26, 88.04, 88.8, 89.55, 90.27, 90.98, 91.68, 92.36, 93.03, 93.69, 94.33, 94.96, 95.59, 96.23, 96.86, 97.48, 98.1, 98.7, 99.3, 99.9, 100.49, 101.07, 101.65, 102.23, 102.8, 103.37, 103.93, 104.49, 105.05, 105.61, 106.16, 106.71, 107.26, 107.81, 108.36, 108.91, 109.45, 109.99, 110.54, 111.08, 111.62, 112.16, 112.7, 113.24, 113.78, 114.32, 114.86, 115.39, 115.93, 116.47, 117, 117.54, 118.07, 118.6, 119.14, 119.67, 120.2, 120.72, 121.25, 121.77, 122.29, 122.81, 123.33, 123.85, 124.36, 124.88, 125.38, 125.89, 126.39, 126.89, 127.39, 127.88, 128.37, 128.86, 129.34, 129.82, 130.3, 130.77, 131.23, 131.7, 132.16, 132.61, 133.07, 133.51, 133.96, 134.4, 134.84, 135.27, 135.7, 136.12, 136.55, 136.97, 137.38, 137.8, 138.21, 138.62, 139.03, 139.44, 139.84, 140.25, 140.65, 141.06, 141.46, 141.87, 142.28, 142.69, 143.1, 143.52, 143.94, 144.37, 144.8, 145.24, 145.69, 146.14, 146.6, 147.07, 147.55, 148.04, 148.54, 149.05, 149.58, 150.11, 150.66, 151.22, 151.79, 152.37, 152.96, 153.57, 154.19, 154.82, 155.45, 156.09, 156.74, 157.39, 158.05, 158.71, 159.36, 160.02, 160.68, 161.33, 161.97, 162.61, 163.23, 163.84, 164.44, 165.03, 165.6, 166.15, 166.69, 167.21, 167.71, 168.2, 168.66, 169.11, 169.53, 169.94, 170.33, 170.7, 171.06, 171.39, 171.71, 172.01, 172.3, 172.57, 172.83, 173.07, 173.29, 173.51, 173.71, 173.9, 174.08, 174.25, 174.41, 174.56, 174.7, 174.84, 174.96, 175.08, 175.19, 175.29, 175.39, 175.49, 175.57, 175.65, 175.73, 175.81, 175.87, 175.94, 176, 176.06, 176.11, 176.16, 176.21, 176.26, 176.3, 176.34, 176.38, 176.42, 176.46, 176.49, 176.52, 176.55, 176.58, 176.61, 176.63, 176.66, 176.68, 176.7, 176.72, 176.74, 176.76, 176.78, 176.8, 176.82, 176.84, 176.85
], [85.19, 85.85, 86.73, 87.58, 88.41, 89.2, 89.96, 90.69, 91.4, 92.07, 92.72, 93.33, 93.92, 94.51, 95.09, 95.66, 96.24, 96.8, 97.37, 97.93, 98.5, 99.06, 99.62, 100.19, 100.75, 101.32, 101.89, 102.46, 103.03, 103.6, 104.18, 104.75, 105.33, 105.91, 106.5, 107.08, 107.67, 108.25, 108.84, 109.43, 110.02, 110.61, 111.2, 111.79, 112.37, 112.96, 113.55, 114.13, 114.72, 115.3, 115.88, 116.45, 117.03, 117.6, 118.17, 118.73, 119.29, 119.85, 120.41, 120.95, 121.49, 122.03, 122.57, 123.09, 123.61, 124.13, 124.65, 125.15, 125.65, 126.15, 126.63, 127.11, 127.59, 128.06, 128.53, 128.99, 129.45, 129.89, 130.34, 130.78, 131.22, 131.65, 132.08, 132.5, 132.92, 133.34, 133.76, 134.18, 134.59, 135.01, 135.43, 135.84, 136.27, 136.69, 137.12, 137.55, 137.99, 138.44, 138.89, 139.35, 139.82, 140.3, 140.79, 141.3, 141.81, 142.34, 142.87, 143.42, 143.98, 144.55, 145.13, 145.72, 146.32, 146.93, 147.54, 148.15, 148.77, 149.38, 149.99, 150.59, 151.19, 151.78, 152.36, 152.92, 153.46, 153.99, 154.51, 155, 155.47, 155.92, 156.35, 156.76, 157.15, 157.52, 157.87, 158.2, 158.51, 158.8, 159.08, 159.34, 159.58, 159.8, 160.01, 160.21, 160.39, 160.56, 160.72, 160.87, 161.01, 161.15, 161.27, 161.39, 161.49, 161.59, 161.69, 161.78, 161.86, 161.94, 162.01, 162.08, 162.15, 162.21, 162.26, 162.32, 162.37, 162.42, 162.47, 162.51, 162.55, 162.59, 162.63, 162.66, 162.7, 162.73, 162.76, 162.79, 162.82, 162.84, 162.87, 162.89, 162.91, 162.94, 162.96, 162.98, 163, 163.01, 163.03, 163.05, 163.07, 163.08, 163.1, 163.11, 163.13, 163.14, 163.15, 163.17, 163.18, 163.19, 163.2, 163.21, 163.22, 163.23, 163.24, 163.25, 163.26, 163.27, 163.28, 163.28, 163.29, 163.3, 163.3, 163.31, 163.32, 163.32, 163.33, 163.34, 163.34
]],
  p3: [[79.91, 80.64, 81.37, 82.09, 82.8, 83.5, 84.18, 84.85, 85.51, 86.17, 86.81, 87.45, 88.07, 88.66, 89.21, 89.75, 90.29, 90.81, 91.33, 91.85, 92.36, 92.86, 93.36, 93.86, 94.35, 94.84, 95.32, 95.81, 96.29, 96.77, 97.24, 97.72, 98.2, 98.67, 99.15, 99.62, 100.1, 100.57, 101.05, 101.52, 102, 102.48, 102.96, 103.44, 103.92, 104.41, 104.89, 105.38, 105.86, 106.35, 106.84, 107.33, 107.82, 108.31, 108.79, 109.28, 109.77, 110.25, 110.74, 111.22, 111.71, 112.19, 112.67, 113.14, 113.62, 114.09, 114.56, 115.02, 115.48, 115.94, 116.39, 116.84, 117.28, 117.72, 118.16, 118.58, 119.01, 119.43, 119.84, 120.25, 120.65, 121.05, 121.45, 121.83, 122.21, 122.59, 122.97, 123.34, 123.7, 124.06, 124.42, 124.77, 125.13, 125.47, 125.82, 126.16, 126.5, 126.84, 127.18, 127.52, 127.86, 128.19, 128.54, 128.88, 129.22, 129.57, 129.92, 130.28, 130.63, 131, 131.37, 131.74, 132.12, 132.51, 132.9, 133.31, 133.72, 134.13, 134.56, 134.99, 135.44, 135.89, 136.36, 136.83, 137.31, 137.8, 138.3, 138.81, 139.32, 139.85, 140.38, 140.92, 141.46, 142.01, 142.57, 143.13, 143.7, 144.27, 144.84, 145.41, 145.98, 146.55, 147.12, 147.69, 148.25, 148.81, 149.36, 149.91, 150.45, 150.98, 151.5, 152.01, 152.51, 152.99, 153.47, 153.93, 154.39, 154.83, 155.25, 155.66, 156.05, 156.43, 156.8, 157.15, 157.49, 157.82, 158.13, 158.43, 158.71, 158.98, 159.24, 159.48, 159.72, 159.94, 160.15, 160.35, 160.54, 160.72, 160.89, 161.05, 161.2, 161.34, 161.48, 161.61, 161.73, 161.84, 161.95, 162.05, 162.15, 162.23, 162.31, 162.39, 162.47, 162.54, 162.6, 162.66, 162.72, 162.78, 162.83, 162.87, 162.91, 162.95, 162.99, 163.03, 163.07, 163.1, 163.13, 163.16, 163.18, 163.2, 163.23, 163.25, 163.27, 163.29, 163.3, 163.32, 163.33
], [78.63, 79.21, 79.99, 80.76, 81.51, 82.24, 82.95, 83.63, 84.28, 84.91, 85.51, 86.09, 86.64, 87.17, 87.7, 88.22, 88.74, 89.25, 89.76, 90.27, 90.78, 91.29, 91.8, 92.31, 92.82, 93.33, 93.84, 94.36, 94.87, 95.39, 95.91, 96.44, 96.97, 97.5, 98.03, 98.56, 99.09, 99.62, 100.15, 100.69, 101.23, 101.76, 102.3, 102.83, 103.37, 103.9, 104.44, 104.97, 105.5, 106.03, 106.55, 107.08, 107.6, 108.11, 108.63, 109.14, 109.64, 110.15, 110.65, 111.14, 111.63, 112.11, 112.59, 113.07, 113.53, 113.99, 114.45, 114.9, 115.35, 115.79, 116.22, 116.65, 117.07, 117.48, 117.89, 118.29, 118.69, 119.09, 119.47, 119.85, 120.23, 120.6, 120.96, 121.32, 121.68, 122.03, 122.38, 122.73, 123.07, 123.41, 123.75, 124.09, 124.43, 124.76, 125.1, 125.44, 125.79, 126.14, 126.49, 126.84, 127.21, 127.58, 127.96, 128.35, 128.76, 129.17, 129.6, 130.04, 130.49, 130.96, 131.45, 131.96, 132.48, 133.01, 133.56, 134.13, 134.71, 135.3, 135.9, 136.51, 137.13, 137.75, 138.37, 138.99, 139.6, 140.2, 140.8, 141.38, 141.94, 142.48, 143.01, 143.52, 144, 144.46, 144.89, 145.3, 145.69, 146.05, 146.4, 146.72, 147.01, 147.29, 147.55, 147.79, 148.01, 148.22, 148.41, 148.59, 148.75, 148.91, 149.05, 149.18, 149.3, 149.41, 149.51, 149.61, 149.7, 149.78, 149.86, 149.94, 150, 150.06, 150.12, 150.18, 150.23, 150.28, 150.32, 150.36, 150.4, 150.44, 150.48, 150.51, 150.54, 150.57, 150.6, 150.63, 150.65, 150.68, 150.7, 150.72, 150.74, 150.76, 150.78, 150.8, 150.81, 150.83, 150.85, 150.86, 150.88, 150.89, 150.9, 150.92, 150.93, 150.94, 150.95, 150.96, 150.97, 150.98, 150.99, 151, 151.01, 151.02, 151.03, 151.04, 151.04, 151.05, 151.06, 151.06, 151.07, 151.08, 151.08, 151.09, 151.09, 151.1, 151.1, 151.11, 151.11
]],
  p97: [[93.02, 93.92, 94.83, 95.72, 96.57, 97.4, 98.2, 98.99, 99.75, 100.49, 101.21, 101.91, 102.6, 103.27, 103.93, 104.58, 105.22, 105.86, 106.49, 107.13, 107.75, 108.37, 108.99, 109.61, 110.23, 110.84, 111.46, 112.07, 112.68, 113.29, 113.89, 114.5, 115.11, 115.71, 116.32, 116.93, 117.53, 118.14, 118.74, 119.35, 119.96, 120.56, 121.17, 121.78, 122.38, 122.99, 123.6, 124.2, 124.81, 125.42, 126.02, 126.63, 127.23, 127.83, 128.44, 129.04, 129.64, 130.24, 130.84, 131.44, 132.03, 132.63, 133.22, 133.8, 134.39, 134.97, 135.55, 136.13, 136.71, 137.28, 137.85, 138.41, 138.97, 139.53, 140.09, 140.64, 141.18, 141.72, 142.26, 142.8, 143.33, 143.85, 144.37, 144.89, 145.4, 145.91, 146.42, 146.92, 147.42, 147.91, 148.41, 148.89, 149.38, 149.86, 150.34, 150.82, 151.29, 151.77, 152.24, 152.72, 153.19, 153.66, 154.14, 154.61, 155.09, 155.57, 156.05, 156.54, 157.03, 157.52, 158.02, 158.53, 159.04, 159.56, 160.09, 160.62, 161.17, 161.72, 162.28, 162.85, 163.43, 164.02, 164.62, 165.23, 165.84, 166.47, 167.1, 167.74, 168.39, 169.04, 169.69, 170.35, 171.01, 171.67, 172.33, 172.99, 173.65, 174.29, 174.93, 175.57, 176.19, 176.79, 177.39, 177.97, 178.54, 179.09, 179.62, 180.14, 180.64, 181.12, 181.58, 182.02, 182.45, 182.85, 183.24, 183.6, 183.96, 184.29, 184.61, 184.91, 185.2, 185.47, 185.73, 185.97, 186.2, 186.42, 186.62, 186.82, 187, 187.18, 187.35, 187.51, 187.65, 187.79, 187.93, 188.05, 188.17, 188.29, 188.39, 188.49, 188.59, 188.68, 188.77, 188.85, 188.93, 189, 189.08, 189.14, 189.2, 189.26, 189.32, 189.38, 189.43, 189.49, 189.53, 189.58, 189.62, 189.66, 189.7, 189.74, 189.78, 189.81, 189.85, 189.88, 189.91, 189.94, 189.97, 190, 190.02, 190.05, 190.07, 190.09, 190.11, 190.14, 190.16, 190.18, 190.19
], [91.72, 92.46, 93.45, 94.4, 95.33, 96.22, 97.07, 97.88, 98.66, 99.41, 100.12, 100.81, 101.47, 102.12, 102.78, 103.43, 104.07, 104.71, 105.35, 105.99, 106.63, 107.27, 107.91, 108.55, 109.2, 109.84, 110.49, 111.13, 111.78, 112.43, 113.09, 113.74, 114.39, 115.05, 115.71, 116.36, 117.03, 117.69, 118.35, 119.01, 119.67, 120.33, 120.99, 121.65, 122.31, 122.97, 123.63, 124.28, 124.93, 125.58, 126.22, 126.86, 127.5, 128.14, 128.77, 129.39, 130.01, 130.63, 131.24, 131.84, 132.44, 133.03, 133.62, 134.2, 134.78, 135.34, 135.9, 136.46, 137.01, 137.55, 138.09, 138.63, 139.15, 139.67, 140.19, 140.7, 141.2, 141.7, 142.2, 142.7, 143.18, 143.67, 144.15, 144.63, 145.12, 145.6, 146.08, 146.56, 147.04, 147.53, 148.02, 148.51, 149, 149.5, 150.01, 150.52, 151.03, 151.56, 152.09, 152.63, 153.18, 153.73, 154.3, 154.87, 155.45, 156.04, 156.63, 157.23, 157.83, 158.44, 159.05, 159.66, 160.26, 160.87, 161.47, 162.06, 162.65, 163.23, 163.79, 164.35, 164.89, 165.41, 165.92, 166.42, 166.89, 167.35, 167.79, 168.21, 168.61, 169, 169.36, 169.71, 170.04, 170.35, 170.65, 170.93, 171.19, 171.43, 171.67, 171.89, 172.09, 172.29, 172.47, 172.64, 172.8, 172.96, 173.1, 173.23, 173.35, 173.47, 173.58, 173.68, 173.78, 173.88, 173.96, 174.04, 174.12, 174.19, 174.26, 174.32, 174.38, 174.44, 174.49, 174.54, 174.59, 174.63, 174.67, 174.71, 174.75, 174.79, 174.83, 174.86, 174.89, 174.92, 174.95, 174.98, 175, 175.02, 175.05, 175.07, 175.09, 175.11, 175.13, 175.15, 175.17, 175.18, 175.2, 175.21, 175.23, 175.24, 175.26, 175.27, 175.28, 175.3, 175.31, 175.32, 175.33, 175.34, 175.35, 175.36, 175.37, 175.38, 175.38, 175.39, 175.4, 175.41, 175.41, 175.42, 175.43, 175.43, 175.44, 175.44, 175.45, 175.45, 175.46, 175.46, 175.47
]]
}

const bfaValC = {
	res: ["Gizi kurang", "Gizi baik", "Gizi lebih", "Obesitas"],
  age: [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240
],
	p5: [[14.74, 14.7, 14.67, 14.63, 14.6, 14.57, 14.53, 14.5, 14.47, 14.44, 14.41, 14.38, 14.35, 14.32, 14.29, 14.26, 14.24, 14.21, 14.18, 14.16, 14.13, 14.11, 14.09, 14.07, 14.04, 14.02, 14, 13.99, 13.97, 13.95, 13.93, 13.92, 13.9, 13.89, 13.87, 13.86, 13.85, 13.84, 13.83, 13.81, 13.8, 13.79, 13.79, 13.78, 13.77, 13.76, 13.75, 13.75, 13.74, 13.74, 13.73, 13.73, 13.72, 13.72, 13.72, 13.72, 13.72, 13.72, 13.72, 13.72, 13.72, 13.72, 13.73, 13.73, 13.74, 13.74, 13.75, 13.75, 13.76, 13.77, 13.78, 13.79, 13.8, 13.81, 13.82, 13.83, 13.84, 13.85, 13.86, 13.88, 13.89, 13.91, 13.92, 13.94, 13.95, 13.97, 13.99, 14.01, 14.03, 14.05, 14.07, 14.09, 14.11, 14.14, 14.16, 14.18, 14.21, 14.23, 14.26, 14.29, 14.31, 14.34, 14.37, 14.4, 14.43, 14.46, 14.49, 14.52, 14.55, 14.58, 14.61, 14.64, 14.68, 14.71, 14.75, 14.78, 14.81, 14.85, 14.89, 14.92, 14.96, 15, 15.04, 15.07, 15.11, 15.15, 15.19, 15.23, 15.27, 15.31, 15.36, 15.4, 15.44, 15.48, 15.52, 15.57, 15.61, 15.66, 15.7, 15.74, 15.79, 15.83, 15.88, 15.92, 15.97, 16.02, 16.06, 16.11, 16.16, 16.2, 16.25, 16.3, 16.34, 16.39, 16.44, 16.49, 16.53, 16.58, 16.63, 16.68, 16.73, 16.78, 16.82, 16.87, 16.92, 16.97, 17.02, 17.06, 17.11, 17.16, 17.21, 17.26, 17.3, 17.35, 17.4, 17.45, 17.49, 17.54, 17.59, 17.64, 17.68, 17.73, 17.78, 17.82, 17.87, 17.91, 17.96, 18, 18.05, 18.09, 18.14, 18.18, 18.22, 18.27, 18.31, 18.35, 18.39, 18.43, 18.48, 18.52, 18.56, 18.6, 18.64, 18.67, 18.71, 18.75, 18.79, 18.82, 18.86, 18.9, 18.93, 18.96, 19, 19.03, 19.06, 19.09, 19.12
], [14.4, 14.37, 14.33, 14.3, 14.26, 14.23, 14.2, 14.17, 14.14, 14.11, 14.08, 14.05, 14.02, 13.99, 13.96, 13.94, 13.91, 13.89, 13.86, 13.84, 13.81, 13.79, 13.77, 13.75, 13.73, 13.7, 13.69, 13.67, 13.65, 13.63, 13.62, 13.6, 13.58, 13.57, 13.56, 13.54, 13.53, 13.52, 13.51, 13.5, 13.49, 13.48, 13.47, 13.46, 13.45, 13.45, 13.44, 13.43, 13.43, 13.43, 13.42, 13.42, 13.42, 13.42, 13.42, 13.42, 13.42, 13.42, 13.42, 13.43, 13.43, 13.44, 13.44, 13.45, 13.46, 13.47, 13.47, 13.48, 13.49, 13.5, 13.51, 13.53, 13.54, 13.55, 13.56, 13.58, 13.59, 13.61, 13.62, 13.64, 13.66, 13.68, 13.69, 13.71, 13.73, 13.76, 13.78, 13.8, 13.82, 13.85, 13.87, 13.89, 13.92, 13.94, 13.97, 14, 14.03, 14.05, 14.08, 14.11, 14.14, 14.17, 14.2, 14.23, 14.26, 14.29, 14.32, 14.36, 14.39, 14.42, 14.46, 14.49, 14.53, 14.56, 14.6, 14.63, 14.67, 14.7, 14.74, 14.78, 14.81, 14.85, 14.89, 14.93, 14.97, 15.01, 15.05, 15.09, 15.13, 15.17, 15.21, 15.25, 15.29, 15.33, 15.37, 15.41, 15.45, 15.49, 15.54, 15.58, 15.62, 15.66, 15.7, 15.75, 15.79, 15.83, 15.87, 15.91, 15.96, 16, 16.04, 16.08, 16.12, 16.17, 16.21, 16.25, 16.29, 16.33, 16.37, 16.41, 16.45, 16.49, 16.53, 16.57, 16.61, 16.65, 16.69, 16.73, 16.77, 16.81, 16.85, 16.88, 16.92, 16.96, 16.99, 17.03, 17.06, 17.1, 17.13, 17.17, 17.2, 17.23, 17.26, 17.3, 17.33, 17.36, 17.38, 17.41, 17.44, 17.47, 17.49, 17.52, 17.54, 17.56, 17.59, 17.61, 17.63, 17.65, 17.67, 17.69, 17.7, 17.72, 17.73, 17.75, 17.76, 17.78, 17.79, 17.8, 17.8, 17.81, 17.81, 17.82, 17.82, 17.82, 17.82, 17.82, 17.82
]],
  p85: [[18.16, 18.08, 18, 17.92, 17.85, 17.78, 17.71, 17.64, 17.57, 17.51, 17.46, 17.41, 17.36, 17.31, 17.26, 17.21, 17.17, 17.14, 17.1, 17.07, 17.04, 17.01, 16.98, 16.96, 16.94, 16.92, 16.9, 16.89, 16.88, 16.87, 16.86, 16.85, 16.84, 16.84, 16.84, 16.84, 16.84, 16.85, 16.85, 16.86, 16.87, 16.88, 16.89, 16.91, 16.92, 16.94, 16.96, 16.98, 17, 17.03, 17.06, 17.08, 17.11, 17.14, 17.17, 17.2, 17.24, 17.27, 17.31, 17.34, 17.38, 17.42, 17.46, 17.51, 17.55, 17.59, 17.64, 17.69, 17.74, 17.78, 17.83, 17.88, 17.93, 17.99, 18.04, 18.09, 18.15, 18.2, 18.26, 18.31, 18.37, 18.43, 18.48, 18.54, 18.6, 18.66, 18.72, 18.79, 18.85, 18.91, 18.97, 19.04, 19.1, 19.17, 19.23, 19.29, 19.36, 19.43, 19.49, 19.56, 19.63, 19.69, 19.76, 19.83, 19.89, 19.96, 20.03, 20.1, 20.17, 20.24, 20.3, 20.37, 20.44, 20.51, 20.58, 20.65, 20.72, 20.79, 20.86, 20.92, 20.99, 21.06, 21.13, 21.2, 21.27, 21.34, 21.41, 21.48, 21.55, 21.62, 21.68, 21.75, 21.82, 21.89, 21.96, 22.03, 22.09, 22.16, 22.23, 22.3, 22.36, 22.43, 22.5, 22.57, 22.63, 22.7, 22.77, 22.83, 22.9, 22.96, 23.03, 23.1, 23.16, 23.23, 23.29, 23.36, 23.42, 23.49, 23.55, 23.61, 23.68, 23.74, 23.8, 23.87, 23.93, 23.99, 24.06, 24.12, 24.18, 24.24, 24.3, 24.37, 24.43, 24.49, 24.55, 24.61, 24.67, 24.73, 24.79, 24.85, 24.91, 24.97, 25.03, 25.09, 25.15, 25.21, 25.27, 25.33, 25.39, 25.45, 25.51, 25.57, 25.63, 25.69, 25.74, 25.8, 25.86, 25.92, 25.98, 26.04, 26.1, 26.16, 26.21, 26.27, 26.33, 26.39, 26.45, 26.51, 26.57, 26.63, 26.69, 26.75, 26.81, 26.87, 26.93, 26.99, 27.05
], [18.02, 17.93, 17.85, 17.77, 17.69, 17.62, 17.55, 17.48, 17.41, 17.35, 17.3, 17.25, 17.2, 17.15, 17.1, 17.06, 17.02, 16.98, 16.95, 16.92, 16.89, 16.87, 16.84, 16.83, 16.81, 16.8, 16.79, 16.78, 16.77, 16.76, 16.76, 16.76, 16.77, 16.77, 16.78, 16.79, 16.8, 16.81, 16.83, 16.84, 16.86, 16.88, 16.91, 16.93, 16.96, 16.99, 17.02, 17.05, 17.09, 17.12, 17.16, 17.19, 17.23, 17.27, 17.32, 17.36, 17.41, 17.46, 17.5, 17.55, 17.6, 17.66, 17.71, 17.76, 17.82, 17.87, 17.93, 17.98, 18.04, 18.1, 18.16, 18.22, 18.29, 18.35, 18.41, 18.48, 18.54, 18.61, 18.68, 18.74, 18.81, 18.88, 18.95, 19.02, 19.09, 19.16, 19.23, 19.3, 19.37, 19.44, 19.51, 19.59, 19.66, 19.73, 19.8, 19.88, 19.95, 20.02, 20.1, 20.17, 20.24, 20.32, 20.39, 20.47, 20.54, 20.61, 20.69, 20.76, 20.84, 20.91, 20.98, 21.06, 21.13, 21.2, 21.28, 21.35, 21.42, 21.49, 21.57, 21.64, 21.71, 21.78, 21.85, 21.92, 22, 22.07, 22.14, 22.2, 22.27, 22.34, 22.41, 22.48, 22.55, 22.61, 22.68, 22.74, 22.81, 22.87, 22.94, 23, 23.07, 23.13, 23.19, 23.26, 23.32, 23.38, 23.44, 23.5, 23.56, 23.62, 23.68, 23.74, 23.79, 23.85, 23.91, 23.96, 24.02, 24.08, 24.13, 24.18, 24.24, 24.29, 24.34, 24.39, 24.45, 24.5, 24.55, 24.6, 24.64, 24.69, 24.74, 24.79, 24.83, 24.88, 24.92, 24.97, 25.01, 25.06, 25.1, 25.14, 25.18, 25.23, 25.27, 25.31, 25.35, 25.39, 25.43, 25.47, 25.51, 25.55, 25.59, 25.62, 25.66, 25.7, 25.73, 25.77, 25.81, 25.84, 25.88, 25.91, 25.95, 25.98, 26.02, 26.05, 26.09, 26.12, 26.15, 26.19, 26.22, 26.25, 26.29, 26.32, 26.35, 26.38, 26.42, 26.45, 26.48
]],
  p95: [[19.34, 19.22, 19.11, 19.01, 18.9, 18.81, 18.72, 18.63, 18.55, 18.47, 18.4, 18.33, 18.27, 18.21, 18.16, 18.11, 18.06, 18.02, 17.99, 17.95, 17.92, 17.9, 17.87, 17.86, 17.85, 17.84, 17.83, 17.82, 17.82, 17.83, 17.83, 17.84, 17.85, 17.87, 17.88, 17.9, 17.93, 17.96, 17.99, 18.02, 18.05, 18.08, 18.12, 18.16, 18.2, 18.25, 18.29, 18.34, 18.39, 18.44, 18.5, 18.55, 18.61, 18.67, 18.73, 18.79, 18.85, 18.92, 18.98, 19.05, 19.12, 19.19, 19.26, 19.33, 19.41, 19.48, 19.56, 19.63, 19.71, 19.79, 19.87, 19.95, 20.03, 20.11, 20.19, 20.28, 20.36, 20.44, 20.53, 20.61, 20.7, 20.79, 20.87, 20.96, 21.05, 21.14, 21.22, 21.31, 21.4, 21.49, 21.58, 21.67, 21.76, 21.85, 21.94, 22.02, 22.11, 22.2, 22.29, 22.38, 22.47, 22.56, 22.65, 22.74, 22.82, 22.91, 23, 23.09, 23.17, 23.26, 23.35, 23.43, 23.52, 23.6, 23.69, 23.77, 23.86, 23.94, 24.02, 24.11, 24.19, 24.27, 24.35, 24.43, 24.51, 24.59, 24.67, 24.75, 24.83, 24.91, 24.99, 25.07, 25.14, 25.22, 25.29, 25.37, 25.44, 25.52, 25.59, 25.66, 25.73, 25.81, 25.88, 25.95, 26.02, 26.09, 26.15, 26.22, 26.29, 26.35, 26.42, 26.49, 26.55, 26.62, 26.68, 26.74, 26.81, 26.87, 26.93, 26.99, 27.06, 27.12, 27.18, 27.24, 27.3, 27.36, 27.42, 27.48, 27.54, 27.59, 27.65, 27.71, 27.77, 27.83, 27.88, 27.94, 28, 28.06, 28.11, 28.17, 28.23, 28.29, 28.34, 28.4, 28.46, 28.52, 28.58, 28.63, 28.69, 28.75, 28.81, 28.87, 28.93, 28.99, 29.05, 29.11, 29.17, 29.24, 29.3, 29.36, 29.43, 29.49, 29.56, 29.63, 29.7, 29.77, 29.84, 29.91, 29.98, 30.05, 30.12, 30.2, 30.27, 30.35, 30.43, 30.51, 30.59
], [19.11, 19.02, 18.93, 18.84, 18.76, 18.68, 18.61, 18.55, 18.48, 18.43, 18.38, 18.33, 18.28, 18.24, 18.2, 18.17, 18.14, 18.11, 18.09, 18.07, 18.06, 18.05, 18.04, 18.03, 18.03, 18.03, 18.04, 18.05, 18.06, 18.07, 18.08, 18.1, 18.13, 18.15, 18.18, 18.21, 18.24, 18.28, 18.31, 18.35, 18.4, 18.44, 18.49, 18.54, 18.59, 18.64, 18.69, 18.75, 18.81, 18.87, 18.93, 19, 19.06, 19.13, 19.2, 19.27, 19.34, 19.41, 19.49, 19.56, 19.64, 19.72, 19.8, 19.88, 19.96, 20.04, 20.13, 20.21, 20.3, 20.39, 20.48, 20.57, 20.66, 20.75, 20.84, 20.93, 21.02, 21.11, 21.2, 21.3, 21.39, 21.49, 21.58, 21.68, 21.77, 21.87, 21.96, 22.06, 22.16, 22.25, 22.35, 22.45, 22.55, 22.64, 22.74, 22.84, 22.94, 23.03, 23.13, 23.23, 23.32, 23.42, 23.52, 23.62, 23.71, 23.81, 23.9, 24, 24.1, 24.19, 24.29, 24.38, 24.48, 24.57, 24.66, 24.76, 24.85, 24.94, 25.03, 25.12, 25.22, 25.31, 25.39, 25.48, 25.57, 25.66, 25.75, 25.83, 25.92, 26.01, 26.09, 26.18, 26.26, 26.34, 26.42, 26.51, 26.59, 26.67, 26.75, 26.83, 26.91, 26.99, 27.07, 27.14, 27.22, 27.3, 27.37, 27.45, 27.52, 27.59, 27.67, 27.74, 27.81, 27.88, 27.95, 28.02, 28.09, 28.16, 28.23, 28.3, 28.36, 28.43, 28.5, 28.56, 28.63, 28.69, 28.75, 28.82, 28.88, 28.94, 29, 29.07, 29.13, 29.19, 29.25, 29.31, 29.37, 29.43, 29.49, 29.55, 29.6, 29.66, 29.72, 29.78, 29.84, 29.9, 29.95, 30.01, 30.07, 30.13, 30.18, 30.24, 30.3, 30.36, 30.41, 30.47, 30.53, 30.59, 30.64, 30.7, 30.76, 30.82, 30.88, 30.94, 31, 31.06, 31.12, 31.18, 31.24, 31.31, 31.37, 31.44, 31.5, 31.57, 31.63, 31.7, 31.76
]]
}

const wfhValC = {
	res: ["Gizi buruk", "Gizi kurang", "Gizi baik", "Gizi lebih", "Obesitas"],
  per: [70, 90, 110, 120]
}


const plotArr = {
	wfaWhoBoy0: [0, 66*r, 301*r, 0, 8*r, 2, 14.95*r, 14.05*r],
  wfaWhoBoy2: [1, 66*r, 301*r, 24, 0*r, 8, 9.97*r, 11.5*r],
  wfaWhoGirl0: [2, 66*r, 301*r, 0, 8*r, 2, 14.95*r, 14.05*r],
  wfaWhoGirl2: [3, 66*r, 301*r, 24, 0*r, 7, 9.97*r, 10*r],
  hfaWhoBoy0: [4, 66*r, 301*r, 0, 12*r, 45, 14.95*r, 4.03*r],
  hfaWhoBoy2: [5, 66*r, 301*r, 24, 19*r, 80, 9.97*r, 4.69*r],
  hfaWhoGirl0: [6, 66*r, 301*r, 0, 12*r, 45, 14.95*r, 4.03*r],
  hfaWhoGirl2: [7, 66*r, 301*r, 24, 19*r, 80, 9.97*r, 4.69]*r,
  wfhWhoBoy0: [8, 66*r, 301*r, 45, 10*r, 2, 5.52*r, 9.54*r],
  wfhWhoBoy2: [9, 66*r, 301*r, 65, 9*r, 6 , 6.53*r, 8.83*r],
  wfhWhoGirl0: [10, 66*r, 301*r, 45, 10*r, 2, 5.52*r, 9.54*r],
  wfhWhoGirl2: [11, 66*r, 301*r, 65, 12.7*r, 6, 6.53*r, 8.35*r],
  bfaWhoBoy0: [12, 66*r, 301*r, 0, 13.5*r, 10, 14.95*r, 16.91*r],
  bfaWhoGirl0: [13, 66*r, 301*r, 0, 13.5*r, 10, 14.95*r, 16.91*r],
  wfaCdcBoy2: [14, 89.3*r, 589.5*r, 24, 14*r, 10, 1.46*r, 3.3*r],
  hfaCdcBoy2: [14, 89.3*r, 589.5*r, 24, 129.5*r, 80, 1.46*r, 3.3*r],
  wfaCdcGirl2: [15, 89.3*r, 589.5*r, 24, 14*r, 10, 1.46*r, 3.3*r],
  hfaCdcGirl2: [15, 89.3*r, 589.5*r, 24, 129.5*r, 80, 1.46*r, 3.3*r],
  bfaCdcBoy2: [16, 67.2*r, 565*r, 24, 37*r, 12, 1.665*r, 18.58*r],
  bfaCdcGirl2: [17, 67.2*r, 565*r, 24, 37*r, 12, 1.665*r, 18.58*r]
}


const itp = document.getElementById("res");

let chartType;

test("wfa");


function changeAge(){

	const nD = new Date();
  let yN = nD.getFullYear();
  let mN = 1 + nD.getMonth();
  let dN = nD.getDate();
  
  let bD = bDate.value;
  let yB = Number(bD.slice(0,4));
  let mB = Number(bD.slice(5,7));
  let dB = Number(bD.slice(8,10));

  
  let yAge;
  let mAge;
  let dAge;
  
  if (dN >= dB){
  	dAge = dN - dB;
  } else {
  	dAge = 30 + dN - dB;
    mN = mN - 1;
  }
  
  if (mN >= mB){
  	mAge = mN - mB;
  } else {
  	mAge = 12 + mN - mB;
    yN = yN - 1;
  }
  
  yAge = yN - yB;
  
  
  aYear.value = yAge;
  aMonth.value = mAge;
  

  
}


function resetDate(){
	bDate.value = "";
}

async function calcIt(){
  let gen;
  if (genderLk.checked == true){
  	gen = Number(genderLk.value);
  } else if (genderPr.checked == true){
  	gen = Number(genderPr.value);
  }

  
  let y = Number(aYear.value);
  let m = Number(aMonth.value);
  let w = Number(wt.value);
  let h = Number(ht.value);
  let bmi = w/((h/100)**2);
  bmi = Math.round(bmi*100)/100;
  let age = 12*y + m;
  
  b.innerHTML = bmi;
  
  let cLink, x0, y0, valAtx0, y1, valAty1, xI, yI;
  let xVal, yVal;
  let res;
  
  let valArr = getVal(chartType, gen, age, w, h, bmi);
  
  //tText.innerHTML = bmi;
  
  let plotVal = valArr[0];
  
  cLink = plotVal[0];
  x0 = plotVal[1];
  y0 = plotVal[2];
  valAtx0 = plotVal[3];
  y1 = plotVal[4];
  valAty1 = plotVal[5];
  xI = plotVal[6];
  yI = plotVal[7];
  
  xVal = valArr[1];
  yVal = valArr[2];
  

  
  img.setAttribute("href", imgLink[cLink]);

	res = getRes(chartType, gen, age, w, h, bmi);
  itp.innerHTML = res;
  
  await waitForImage(img);
  
  let old = document.getElementsByClassName("plot");
  if (old !== null){
  	while(old.length > 0){
    	old[0].remove();
    }
  }
  
  if (chartType == "wfh" && age > 60){
  	let hIt = false;
    let ageOfH;
    hfaValC.p50[gen - 1].forEach(function (value, index, array){
      if (value > h && hIt == false){
        ageOfH = index - 1;
        hIt = true;
      }
    })
    let tAge = ageOfH + 24;
    let wAge = wfaValC.p50[gen - 1][ageOfH];
    let pWfh = 100*w/wAge;
    
    const pl1 = document.createElementNS(svgNS, "circle");
    pl1.setAttribute("cx", x0 + (xVal - valAtx0)*xI);
    pl1.setAttribute("cy", y0 - y1 - (yVal - valAty1)*yI);
    pl1.setAttribute("r", 1.5);
    pl1.setAttribute("stroke", "transparent");
    pl1.setAttribute("fill", "black");
    pl1.setAttribute("class", "plot");
    svgF.appendChild(pl1);
    
    let hfaCdc = plotArr.hfaCdcBoy2.slice();
    let y1h = hfaCdc[4];
    let valAty1h = hfaCdc[5];
    
    const pl2 = document.createElementNS(svgNS, "circle");
    pl2.setAttribute("cx", x0 + (xVal - valAtx0)*xI);
    pl2.setAttribute("cy", y0 - y1h - (h - valAty1h)*yI);
    pl2.setAttribute("r", 1.5);
    pl2.setAttribute("stroke", "transparent");
    pl2.setAttribute("fill", "black");
    pl2.setAttribute("class", "plot");
    svgF.appendChild(pl2);
    
    const pl3 = document.createElementNS(svgNS, "circle");
    pl3.setAttribute("cx", x0 + (tAge - valAtx0)*xI);
    pl3.setAttribute("cy", y0 - y1 - (wAge - valAty1)*yI);
    pl3.setAttribute("r", 1.5);
    pl3.setAttribute("stroke", "transparent");
    pl3.setAttribute("fill", "black");
    pl3.setAttribute("class", "plot");
    svgF.appendChild(pl3);
    
    const pl4 = document.createElementNS(svgNS, "circle");
    pl4.setAttribute("cx", x0 + (tAge - valAtx0)*xI);
    pl4.setAttribute("cy", y0 - y1h - (h - valAty1h)*yI);
    pl4.setAttribute("r", 1.5);
    pl4.setAttribute("stroke", "transparent");
    pl4.setAttribute("fill", "black");
    pl4.setAttribute("class", "plot");
    svgF.appendChild(pl4);
    
    const l1 = document.createElementNS(svgNS, "line");
    l1.setAttribute("x1", x0 + (xVal - valAtx0)*xI);
    l1.setAttribute("y1", y0 - y1h - (h - valAty1h)*yI);
    l1.setAttribute("x2", x0 + (tAge - valAtx0)*xI);
    l1.setAttribute("y2", y0 - y1h - (h - valAty1h)*yI);
    l1.setAttribute("stroke", "black");
    l1.setAttribute("class", "plot");
    svgF.appendChild(l1);
    
    const l2 = document.createElementNS(svgNS, "line");
    l2.setAttribute("x1", x0 + (tAge - valAtx0)*xI);
    l2.setAttribute("y1", y0 - y1h - (h - valAty1h)*yI);
    l2.setAttribute("x2", x0 + (tAge - valAtx0)*xI);
    l2.setAttribute("y2", y0 - y1 - (wAge - valAty1)*yI);
    l2.setAttribute("stroke", "black");
    l2.setAttribute("class", "plot");
    svgF.appendChild(l2);
    
  } else {
    const pl = document.createElementNS(svgNS, "circle");
    pl.setAttribute("cx", x0 + (xVal - valAtx0)*xI);
    pl.setAttribute("cy", y0 - y1 - (yVal - valAty1)*yI);
    pl.setAttribute("r", 1.5);
    pl.setAttribute("stroke", "transparent");
    pl.setAttribute("fill", "black");
    pl.setAttribute("class", "plot");
    svgF.appendChild(pl);

  }
}



function getVal(c, g, a, w, h, b){
	let cType = c;
  let gen = g;
  let age = a;
  let cLink, x0, y0, valAtx0, y1, valAty1, xI, yI;
  let xVal, yVal;
  
  let plotVal;
  
  switch(cType){
  	case "wfa":
    	yVal = w;
      xVal = age;
    	if (gen == 1){
      	if (age <= 24){
          plotVal = plotArr.wfaWhoBoy0.slice();
        } else if (age <= 60){
          plotVal = plotArr.wfaWhoBoy2.slice();
        } else {
          plotVal = plotArr.wfaCdcBoy2.slice();
        }
      } else if (gen == 2){
      	if (age <= 24){
        	plotVal = plotArr.wfaWhoGirl0.slice();
        } else if (age <= 60){
        	plotVal = plotArr.wfaWhoGirl2.slice();
        } else {
          plotVal = plotArr.wfaCdcGirl2.slice();
        }    
      }
      break;
    case "hfa":
     	yVal = h;
      xVal = age;
      if (gen == 1){
      	if (age <= 24){
        	plotVal = plotArr.hfaWhoBoy0.slice();
        } else if (age <= 60){
        	plotVal = plotArr.hfaWhoBoy2.slice();
        } else {
          plotVal = plotArr.hfaCdcBoy2.slice();
        }
      } else if (gen == 2){
      	if (age <= 24){
        	plotVal = plotArr.hfaWhoGirl0.slice();
        } else if (age <= 60){
        	plotVal = plotArr.hfaWhoGirl2.slice();
        } else {
          plotVal = plotArr.hfaCdcGirl2.slice();
        }      
      }
    	break;
    case "wfh":
     	yVal = w;
      xVal = h;
      if (gen == 1){
      	if (age <= 24){
        	plotVal = plotArr.wfhWhoBoy0.slice();
        } else if (age <= 60){
        	plotVal = plotArr.wfhWhoBoy2.slice();
        } else {
        	xVal = age;
          plotVal = plotArr.wfaCdcBoy2.slice();
        }
      } else if (gen == 2){
      	if (age <= 24){
        	plotVal = plotArr.wfhWhoGirl0.slice();
        } else if (age <= 60){
        	plotVal = plotArr.wfhWhoGirl2.slice();
        } else {
        	xVal = age;
          plotVal = plotArr.wfaCdcGirl2.slice();
        }      
      }
    	break;
    case "bfa":
     	yVal = b;
      xVal = age;
      if (gen == 1){
      	if (age <= 24){
        	plotVal = plotArr.bfaWhoBoy0.slice();
        } else {
          plotVal = plotArr.bfaCdcBoy2.slice();
        }
      } else if (gen == 2){
      	if (age <= 24){
        	plotVal = plotArr.bfaWhoGirl0.slice();
        } else {
          plotVal = plotArr.bfaCdcGirl2.slice();
        }      
      }
    default:
    	tText.innerHTML = "Error!";
  }
  
  let theArr = [plotVal, xVal, yVal];
  
  return theArr;
  
}

function getRes(c, g, a, w, h, b){
	let cType = c;
  let gen = g;
  let age = a;
  let xVal;
  let yVal;
  let res;
  
  switch(cType){
  	case "wfa":
      yVal = w;
      if (age <= 60){
        if (yVal < wfaVal.m3[gen - 1][age]){
          res = wfaVal.res[0];
        } else if (yVal < wfaVal.m2[gen - 1][age]){
          res = wfaVal.res[1];
        } else if (yVal <= wfaVal.p1[gen - 1][age]){
          res = wfaVal.res[2];
        } else {
          res = wfaVal.res[3];
        }
      } else {
      	let aInd = wfaValC.age.indexOf(age);
        let pWfa = 100*yVal/wfaValC.p50[gen - 1][aInd];
        let resP = " (%BB/U = " + Math.floor(pWfa*10)/10 + "%)";
        if (pWfa < wfaValC.per[0]){
        	res = wfaValC.res[0];
        } else if (pWfa < wfaValC.per[1]){
        	res = wfaValC.res[1];
        } else if (pWfa < wfaValC.per[2]){
        	res = wfaValC.res[2];
        } else {
        	res = wfaValC.res[3];
        }
        res += resP;
      }
      break;
    case "hfa":
      yVal = h;
      if (age <= 60){      
        if (yVal < hfaVal.m3[gen - 1][age]){
          res = hfaVal.res[0];
        } else if (yVal < hfaVal.m2[gen - 1][age]){
          res = hfaVal.res[1];
        } else if (yVal <= hfaVal.p3[gen - 1][age]){
          res = hfaVal.res[2];
        } else {
          res = hfaVal.res[3];
        }
      } else {
      	let aInd = hfaValC.age.indexOf(age);
        if (yVal < hfaValC.p3[gen - 1][aInd]){
          res = hfaValC.res[0];
        } else if (yVal < hfaValC.p97[gen - 1][aInd]){
          res = hfaValC.res[1];
        } else {
        	res = hfaValC.res[2];
        }
      }
      break;
    case "wfh":
    	yVal = w;
      xVal = h;
      if (age <= 24){
        let hInd = wfh0Val.h.indexOf(xVal);
        if (yVal < wfh0Val.m3[gen - 1][hInd]){
          res = wfh0Val.res[0];
        } else if (yVal < wfh0Val.m2[gen - 1][hInd]){
          res = wfh0Val.res[1];
        } else if (yVal <= wfh0Val.p1[gen - 1][hInd]){
          res = wfh0Val.res[2];
        } else if (yVal <= wfh0Val.p2[gen - 1][hInd]){
          res = wfh0Val.res[3];
        } else if (yVal <= wfh0Val.p3[gen - 1][hInd]){
          res = wfh0Val.res[4];
        } else {
          res = wfh0Val.res[5];
        }  
      } else if (age <= 60){
      	let hInd = wfh2Val.h.indexOf(xVal);
        if (yVal < wfh2Val.m3[gen - 1][hInd]){
          res = wfh2Val.res[0];
        } else if (yVal < wfh2Val.m2[gen - 1][hInd]){
          res = wfh2Val.res[1];
        } else if (yVal <= wfh2Val.p1[gen - 1][hInd]){
          res = wfh2Val.res[2];
        } else if (yVal <= wfh2Val.p2[gen - 1][hInd]){
          res = wfh2Val.res[3];
        } else if (yVal <= wfh2Val.p3[gen - 1][hInd]){
          res = wfh2Val.res[4];
        } else {
          res = wfh2Val.res[5];
        }
      } else {
      	let hIt = false;
        let ageOfH;
        hfaValC.p50[gen - 1].forEach(function (value, index, array){
        	if (value > h && hIt == false){
          	if (value - h >= h - array[index - 1]){
            	ageOfH = index - 1;
            } else {
            	ageOfH = index;
            }
            hIt = true;
          }
        })
        let tAge = ageOfH + 24;
        let wAge = wfaValC.p50[gen - 1][ageOfH];
        let pWfh = 100*w/wAge;
        let resP = " (%BB/BBi = " + Math.floor(pWfh*10)/10 + "%)";
        if (pWfh < wfhValC.per[0]){
        	res = wfhValC.res[0];
        } else if (pWfh < wfhValC.per[1]){
        	res = wfhValC.res[1];
        } else if (pWfh < wfhValC.per[2]){
        	res = wfhValC.res[2];
        } else if (pWfh < wfhValC.per[3]){
        	res = wfhValC.res[3];
        } else {
        	res = wfhValC.res[4];
        }
        res += resP;
       }
      break;
    case "bfa":
    	yVal = b;
      if (age <= 24){
        if (yVal < bfaVal.m3[gen - 1][age]){
          res = bfaVal.res[0];
        } else if (yVal < bfaVal.m2[gen - 1][age]){
          res = bfaVal.res[1];
        } else if (yVal <= bfaVal.p1[gen - 1][age]){
          res = bfaVal.res[2];
        } else if (yVal <= bfaVal.p2[gen - 1][age]){
          res = bfaVal.res[3];
        } else if (yVal <= bfaVal.p3[gen - 1][age]){
          res = bfaVal.res[4];
        } else {
          res = bfaVal.res[5];
        }
      } else {
      	let aInd = bfaValC.age.indexOf(age);
        if (yVal < bfaValC.p5[gen - 1][aInd]){
          res = bfaValC.res[0];
        } else if (yVal < bfaValC.p85[gen - 1][aInd]){
          res = bfaValC.res[1];
        } else if (yVal < bfaValC.p95[gen - 1][aInd]){
          res = bfaValC.res[2];
        } else {
        	res = bfaValC.res[3];
        }
      }
    	break;
  	default:
    	tText.innerHTML = "Error!";
  }
  
  return res;
  
}


function tellMe(event){
	let x = event.offsetX;
  let y = event.offsetY;
  tText.innerHTML = x + "," + y;
}

function test(a){
	const chartBut = document.getElementsByClassName("chartBut");
  const bActive = document.getElementById(a);
  chartType = a;
  calcBut.removeAttribute("disabled");
  //tText.innerHTML = a;
  
  bActive.setAttribute("style", "background-color: gray");
  let i = 0
  while (i < 4){
  	if (chartBut[i].getAttribute("id") !== a){
    	chartBut[i].setAttribute("style", "background-color: kightgray");
    }
    i ++;
  }
  if (genderLk.checked == true || genderPr.checked == true){
  	calcIt();
  }
}

//img.setAttribute("href", imgLink[16]);
//testPlot();

function testPlot(){
	let x0, y0, valAtx0, y1, valAty1, xI, yI;
  let plot = plotArr.bfaCdcBoy2;
  x0 = plot[1];
  y0 = plot[2];
  valAtx0 = plot[3];
  y1 = plot[4];
  valAty1 = plot[5];
  xI = plot[6];
  yI = plot[7];
	for (let i = 0; i < 50; i ++){
    let xVal = 24 + 3*i;
    let yVal = 12 + 0.2*i;
    const pl = document.createElementNS(svgNS, "circle");
    pl.setAttribute("cx", x0 + (xVal - valAtx0)*xI);
    pl.setAttribute("cy", y0 - y1 - (yVal - valAty1)*yI);
    pl.setAttribute("r", 1.5);
    pl.setAttribute("stroke", "transparent");
    pl.setAttribute("fill", "black");
    pl.setAttribute("id", "plot");
    svgF.appendChild(pl);
  }
  

}

function waitForImage(imgElem) {
    return new Promise(function(resolve) {
        if (imgElem.complete) {
            return resolve();
        }
        imgElem.onload = function(){return resolve()};


    });
}

